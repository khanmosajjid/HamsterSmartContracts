{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x392F7DE5a753491C00Bed2914b30d7cf7D746500",
    "txHash": "0x574009356be5a5845f6b11716af5b678cafcb2a5ddfb7bfb6a284ff5c5a8e72d"
  },
  "proxies": [
    {
      "address": "0xaaB70ece69b16Dd65560ebB821422EDC3DF3cFB6",
      "txHash": "0x73a25d246a7882c7ec8942ce3b25e61d0daf841c12d4c90b104cf44059b4b408",
      "kind": "transparent"
    },
    {
      "address": "0x2c96fD456524dD73a56D37bd0D0CaBce82c7f65c",
      "txHash": "0xc6a3961f4edbee7d6bc0b1f88b2822e12c4efe9cbb729ae3840946fddd6ea273",
      "kind": "transparent"
    },
    {
      "address": "0xC65332247705500d6bFC1c44344571d9db430C68",
      "txHash": "0x6485965a90c2e85c9d54b5299766db5f708e21bfae2af004d6204461b87ede66",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ac285251c402ce1c134172358d42a0cf6fb7df7eb3ae6d7dd01ce25d08db71c1": {
      "address": "0xf70DdAb80E5De3A7ba59cA20C0AF5987b4196A3F",
      "txHash": "0x8529b0a4b703cd02d79d12e65ae05a41cc21c0e249c52fc9c6eb24a852e31abf",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:8"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:9"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:10"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:11"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:12"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:13"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:14"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:15"
          },
          {
            "label": "taxPercentage",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:20"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:21"
          },
          {
            "label": "tokenHolders",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:22"
          },
          {
            "label": "tokenHolderIndex",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:23"
          },
          {
            "label": "totalTaxCollected",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9c95cf9b0dd6a62f125033eed95359ed8a42a89cdbfdc114c1f7b43ddc4e632f": {
      "address": "0x935F2087159c30E30017e9800b536030F084021B",
      "txHash": "0x7b5a62e94b6c5278513ebfcb0a415d1f49819f561818a1b0fd70a11441ac79c7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:8"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:9"
          },
          {
            "label": "decimals",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:10"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:11"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:12"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:13"
          },
          {
            "label": "balanceOf",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:14"
          },
          {
            "label": "allowance",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:15"
          },
          {
            "label": "taxPercentage",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:20"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:21"
          },
          {
            "label": "tokenHolders",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:22"
          },
          {
            "label": "tokenHolderIndex",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:23"
          },
          {
            "label": "totalTaxCollected",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "MetaVault",
            "src": "contracts/EQX.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c02e6b2cee5ad54432a6006cef1e1e8d02ba8e357488e5ae459ac38d5338788f": {
      "address": "0x3b7a199a0E190f85a8DC4c731eE9d312310d9b0f",
      "txHash": "0x8002486a3d0150acee4edbc0e94c3c67ca8cbe43be705f354abe887b69986502",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintedNFTs",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:16"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)2484_storage",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:20"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:23"
          },
          {
            "label": "marketplaceAddress",
            "offset": 0,
            "slot": "304",
            "type": "t_address",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:26"
          },
          {
            "label": "UltraRare",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:28"
          },
          {
            "label": "Rare",
            "offset": 0,
            "slot": "306",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:32"
          },
          {
            "label": "payable_address",
            "offset": 0,
            "slot": "307",
            "type": "t_address_payable",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:39"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "HamsterCharacterNFTs",
            "src": "contracts/hamsterCharacterCollection.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2484_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "83a0867b6837366db374b4f3395e9d912587700d158188b9eb62d2c1daf77eb1": {
      "address": "0x9D9Bf02ac114725a6845Df21bbA424F3A02a2f9F",
      "txHash": "0x2a255442873ae86e64f6a728fba59b35a4b368f2d1254cbdf207a89634575bb4",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "commissionAddress",
            "offset": 0,
            "slot": "151",
            "type": "t_address_payable",
            "contract": "HamsterMarketPlaceV1",
            "src": "contracts/hamsterMarketPlace.sol:19"
          },
          {
            "label": "marketPlaceListing",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTListing)5976_storage))",
            "contract": "HamsterMarketPlaceV1",
            "src": "contracts/hamsterMarketPlace.sol:38"
          },
          {
            "label": "listed",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_struct(NFTListing)5976_storage)dyn_storage",
            "contract": "HamsterMarketPlaceV1",
            "src": "contracts/hamsterMarketPlace.sol:39"
          },
          {
            "label": "history",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_struct(Log)5965_storage)dyn_storage",
            "contract": "HamsterMarketPlaceV1",
            "src": "contracts/hamsterMarketPlace.sol:40"
          },
          {
            "label": "validNFTContracts",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_address)dyn_storage",
            "contract": "HamsterMarketPlaceV1",
            "src": "contracts/hamsterMarketPlace.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Log)5965_storage)dyn_storage": {
            "label": "struct HamsterMarketPlaceV1.Log[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(NFTListing)5976_storage)dyn_storage": {
            "label": "struct HamsterMarketPlaceV1.NFTListing[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(NFTListing)5976_storage))": {
            "label": "mapping(address => mapping(uint256 => struct HamsterMarketPlaceV1.NFTListing))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(NFTListing)5976_storage)": {
            "label": "mapping(uint256 => struct HamsterMarketPlaceV1.NFTListing)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Log)5965_storage": {
            "label": "struct HamsterMarketPlaceV1.Log",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "action",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(NFTListing)5976_storage": {
            "label": "struct HamsterMarketPlaceV1.NFTListing",
            "members": [
              {
                "label": "contractAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "isAvailable",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenID",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
